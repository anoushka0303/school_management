syntax = "proto3";

package core;

import "google/protobuf/timestamp.proto";

message User {
  int32 id = 1;
  string email = 2;
  string role = 3;
  bool is_active = 4;
  bool is_staff = 5;
  google.protobuf.Timestamp created_date = 6;
  int32 created_by = 7;
  google.protobuf.Timestamp updated_date = 8;
  int32 updated_by = 9;
  google.protobuf.Timestamp deleted_date = 10;
  int32 deleted_by = 11;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string role = 3;

  oneof Profile {
    Student student_profile = 4;
    Teacher teacher_profile = 5;
    Principal principal_profile = 6;
  }
}

message RegisterReply {
  User user = 1;

  oneof profile {
    Student student_profile = 2;
    Teacher teacher_profile = 3;
    Principal principal_profile = 4;
  }
}

message LoginRequest {
  string email = 1;
  string password = 2;
  string role = 3;
}

message LoginReply {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;

  oneof profile {
    Student student_profile = 4;
    Teacher teacher_profile = 5;
    Principal principal_profile = 6;
  }
}

message Teacher {
  int32 teacher_id = 1;
  User user_id = 2;
  string name = 3;
  string subject = 4;
  repeated Enrollment enrollments = 5;
  google.protobuf.Timestamp created_date = 6;
  int32 created_by = 7;
  google.protobuf.Timestamp updated_date = 8;
  int32 updated_by = 9;
  google.protobuf.Timestamp deleted_date = 10;
  int32 deleted_by = 11;
}

message Principal {
  int32 principal_id = 1;
  User user_id = 2;
  string name = 3;
  google.protobuf.Timestamp created_date = 4;
  int32 created_by = 5;
  google.protobuf.Timestamp updated_date = 6;
  int32 updated_by = 7;
  google.protobuf.Timestamp deleted_date = 8;
  int32 deleted_by = 9;
}

message Course {
  int32 course_id = 1;
  string course_name = 2;
  int32 teacher_id = 3; 
}

message Student {
  int32 student_id = 1;
  User user_id = 2;
  string name = 3;
  string guardian_name = 4;
  string guardian_contact = 5;
  string student_contact = 6;
  string class_name = 7;
  int32 semester = 8;
  repeated int32 course_ids = 9; 
  string address = 10;
  google.protobuf.Timestamp created_date = 11;
  int32 created_by = 12;
  google.protobuf.Timestamp updated_date = 13;
  int32 updated_by = 14;
  google.protobuf.Timestamp deleted_date = 15;
  int32 deleted_by = 16;
  string fee_status = 17;
}

message Enrollment {
  int32 id = 1;
  int32 student_id = 2;
  int32 course_id = 3;
  string grade = 4;
  google.protobuf.Timestamp updated_date = 5;
  int32 updated_by = 6;
}

message BulkUploadStatus {
  int32 id = 1;
  int32 uploaded_by = 2;
  google.protobuf.Timestamp uploaded_date = 3;
  string status = 4;
  string file_name = 5;
  int32 total_record = 6;
  int32 success_count = 7;
  int32 failure_count = 8;
  string remarks = 9;
  string file = 10;
}

message GetStudentRequest {
    int32 student_id = 1;
}

message GetStudentsRequest {
    repeated Student students = 1;
}

message DeleteStudentRequest {
    int32 student_id = 1;
}

message GetStudentReply {
    int32 student_id = 1;
}

message GetStudentsReply {
    repeated Student students = 1;
}

message DeleteStudentReply {
    int32 student_id = 1;
}

message GetTeacherRequest {
    int32 teacher_id = 1;
}

message GetTeachersRequest {
    repeated Teacher students = 1;
}

message DeleteTeacherRequest {
    int32 teacher_id = 1;
}

message GetTeacherReply {
    int32 teacher_id = 1;
}

message GetTeachersReply {
    repeated Teacher students = 1;
}

message DeleteTeacherReply {
    int32 teacher_id = 1;
}

message Empty {}

service AuthService {
  rpc Register (RegisterRequest) returns (RegisterReply);
  rpc Login (LoginRequest) returns (LoginReply);
}

service StudentService {
    rpc ListStudents (GetStudentsRequest) returns (GetStudentsReply);
    rpc GetStudentById (GetStudentRequest) returns (GetStudentReply);
    rpc DeleteStudent (DeleteStudentRequest) returns (DeleteStudentReply);
}

service TeacherService {
    rpc ListTeachers (GetTeachersRequest) returns (GetTeachersReply);
    rpc GetTeacherById (GetTeacherRequest) returns (GetTeacherReply);
    rpc DeleteTeacher (DeleteTeacherRequest) returns (DeleteTeacherReply);
}