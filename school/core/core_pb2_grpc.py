# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from core import core_pb2 as core__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in core_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/core.AuthService/Register',
                request_serializer=core__pb2.RegisterRequest.SerializeToString,
                response_deserializer=core__pb2.RegisterReply.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/core.AuthService/Login',
                request_serializer=core__pb2.LoginRequest.SerializeToString,
                response_deserializer=core__pb2.LoginReply.FromString,
                _registered_method=True)


class AuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=core__pb2.RegisterRequest.FromString,
                    response_serializer=core__pb2.RegisterReply.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=core__pb2.LoginRequest.FromString,
                    response_serializer=core__pb2.LoginReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'core.AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('core.AuthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.AuthService/Register',
            core__pb2.RegisterRequest.SerializeToString,
            core__pb2.RegisterReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.AuthService/Login',
            core__pb2.LoginRequest.SerializeToString,
            core__pb2.LoginReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class StudentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListStudents = channel.unary_unary(
                '/core.StudentService/ListStudents',
                request_serializer=core__pb2.GetStudentsRequest.SerializeToString,
                response_deserializer=core__pb2.GetStudentsReply.FromString,
                _registered_method=True)
        self.GetStudentById = channel.unary_unary(
                '/core.StudentService/GetStudentById',
                request_serializer=core__pb2.GetStudentRequest.SerializeToString,
                response_deserializer=core__pb2.GetStudentReply.FromString,
                _registered_method=True)
        self.DeleteStudent = channel.unary_unary(
                '/core.StudentService/DeleteStudent',
                request_serializer=core__pb2.DeleteStudentRequest.SerializeToString,
                response_deserializer=core__pb2.DeleteStudentReply.FromString,
                _registered_method=True)


class StudentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListStudents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListStudents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStudents,
                    request_deserializer=core__pb2.GetStudentsRequest.FromString,
                    response_serializer=core__pb2.GetStudentsReply.SerializeToString,
            ),
            'GetStudentById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentById,
                    request_deserializer=core__pb2.GetStudentRequest.FromString,
                    response_serializer=core__pb2.GetStudentReply.SerializeToString,
            ),
            'DeleteStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStudent,
                    request_deserializer=core__pb2.DeleteStudentRequest.FromString,
                    response_serializer=core__pb2.DeleteStudentReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'core.StudentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('core.StudentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StudentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListStudents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.StudentService/ListStudents',
            core__pb2.GetStudentsRequest.SerializeToString,
            core__pb2.GetStudentsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.StudentService/GetStudentById',
            core__pb2.GetStudentRequest.SerializeToString,
            core__pb2.GetStudentReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.StudentService/DeleteStudent',
            core__pb2.DeleteStudentRequest.SerializeToString,
            core__pb2.DeleteStudentReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TeacherServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTeachers = channel.unary_unary(
                '/core.TeacherService/ListTeachers',
                request_serializer=core__pb2.GetTeachersRequest.SerializeToString,
                response_deserializer=core__pb2.GetTeachersReply.FromString,
                _registered_method=True)
        self.GetTeacherById = channel.unary_unary(
                '/core.TeacherService/GetTeacherById',
                request_serializer=core__pb2.GetTeacherRequest.SerializeToString,
                response_deserializer=core__pb2.GetTeacherReply.FromString,
                _registered_method=True)
        self.DeleteTeacher = channel.unary_unary(
                '/core.TeacherService/DeleteTeacher',
                request_serializer=core__pb2.DeleteTeacherRequest.SerializeToString,
                response_deserializer=core__pb2.DeleteTeacherReply.FromString,
                _registered_method=True)


class TeacherServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListTeachers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTeacherById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTeacher(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TeacherServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTeachers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTeachers,
                    request_deserializer=core__pb2.GetTeachersRequest.FromString,
                    response_serializer=core__pb2.GetTeachersReply.SerializeToString,
            ),
            'GetTeacherById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTeacherById,
                    request_deserializer=core__pb2.GetTeacherRequest.FromString,
                    response_serializer=core__pb2.GetTeacherReply.SerializeToString,
            ),
            'DeleteTeacher': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTeacher,
                    request_deserializer=core__pb2.DeleteTeacherRequest.FromString,
                    response_serializer=core__pb2.DeleteTeacherReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'core.TeacherService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('core.TeacherService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TeacherService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListTeachers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.TeacherService/ListTeachers',
            core__pb2.GetTeachersRequest.SerializeToString,
            core__pb2.GetTeachersReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTeacherById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.TeacherService/GetTeacherById',
            core__pb2.GetTeacherRequest.SerializeToString,
            core__pb2.GetTeacherReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTeacher(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.TeacherService/DeleteTeacher',
            core__pb2.DeleteTeacherRequest.SerializeToString,
            core__pb2.DeleteTeacherReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
